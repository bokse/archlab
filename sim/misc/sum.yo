                      | #
                      | # Kyle Weller
                      | # clkrbj 62-924-1035
                      | # 
                      | # sum elements of a linked list
                      | # return sum in eax
                      | # manually control frame pointers
                      | #
                      | # Initial code
                      | 
  0x000:              | .pos 0
  0x000: 30f400020000 | irmovl Stack,%esp
  0x006: 2045         | rrmovl %esp,%ebp
  0x008: 30f218000000 | irmovl ele1,%edx
  0x00e: a02f         | pushl %edx
  0x010: 8040000000   | call sum_list
  0x015: 00           | halt
                      | # Sample linked list
  0x018:              | .align 4
  0x018:              | ele1:
  0x018: 08000000     | .long 0x008
  0x01c: 20000000     | .long ele2
  0x020:              | ele2:
  0x020: 00000000     | .long 0x000
  0x024: 28000000     | .long ele3
  0x028:              | ele3:
  0x028: 000c0000     | .long 0xc00
  0x02c: 30000000     | .long ele4
  0x030:              | ele4:
  0x030: b0000000     | .long 0x0b0
  0x034: 38000000     | .long ele5
  0x038:              | ele5:
  0x038: 00000000     | .long 0x000
  0x03c: 00000000     | .long 0
  0x040:              | sum_list:
  0x040: a05f         | pushl %ebp		          # Save %ebp 
  0x042: 6300         | 	xorl %eax,%eax		    # val = 0 
  0x044: 2045         | 	rrmovl %esp,%ebp	    # Set frame ptr 
  0x046: 502508000000 | 	mrmovl 8(%ebp),%edx	  # Get ls 
  0x04c: 6222         | 	andl %edx,%edx		    # ls == 0? 
  0x04e: 7368000000   | 	je L4			            # Yes, goto done 
  0x053:              | L5:			                # Loop: 
  0x053: 506200000000 | 	mrmovl (%edx),%esi	  # t = ls->val 
  0x059: 6060         | 	addl %esi,%eax		    # val += t 
  0x05b: 502204000000 | 	mrmovl 4(%edx),%edx	  # ls = ls->next 
  0x061: 6222         | 	andl %edx,%edx		    # ls == 0? 
  0x063: 7453000000   | 	jne L5			          # No, goto done 
  0x068:              | L4:			                # Done: 
  0x068: 2054         | 	rrmovl %ebp,%esp	    # Restore %esp 
  0x06a: b05f         | 	popl %ebp		          # Restore %ebp 
  0x06c: 90           | 	ret
  0x200:              | .pos 0x200
  0x200:              | Stack:
                      | #Make sure to have newline after last line of code
