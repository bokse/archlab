                      | #/* $begin ncopy-ys */
                      | ##################################################################
                      | # ncopy.ys - Concatenates a src block of len ints to dst.
                      | # Return the number of positive ints (>0) contained in src.
                      | #
                      | # 2014-18912 Ji Jeongwoo
                      | # Describe how and why you modified the baseline code.
                      | # Loop&Npos is executed for all element.(in original code)
                      | # Instructions of Loop is necessary. irreducible.
                      | # If we consider many block in once, instructions of Npos are only executed sometimes.
                      | # I consider 10 blocks once.
                      | #
                      | # (*) Note: Pseudo-end of array is 0xccaaff.
                      | ##################################################################
                      | # Do not modify this portion (Function Prolog)
  0x000: a05f         | ncopy:  pushl %ebp    # Save old frame pointer
  0x002: 2045         |   rrmovl %esp,%ebp    # Set up new frame pointer
  0x004: a06f         |   pushl %esi          # Save callee-save regs
  0x006: a03f         |   pushl %ebx
  0x008: a07f         |   pushl %edi
  0x00a: 503508000000 |   mrmovl 8(%ebp),%ebx   # src
  0x010: 502510000000 |   mrmovl 16(%ebp),%edx  # len
  0x016: 50150c000000 |   mrmovl 12(%ebp),%ecx  # dst
                      | ##################################################################
                      | # You can modify this portion 
  0x01c: 30f7ffaacc00 |   irmovl $0xccaaff,%edi # edi = pseudo-end
  0x022: f0f104000000 |   isubl $4,%ecx
  0x028:              | Move:
  0x028: c0f104000000 |   iaddl $4,%ecx
  0x02e: 506100000000 |   mrmovl (%ecx),%esi    # *dst++
  0x034: 6376         |   xorl %edi,%esi
  0x036: 7428000000   |   jne Move              # not? goto Move
  0x03b: c0f104000000 |   iaddl $4,%ecx
  0x041: 6300         |   xorl %eax,%eax		# count=0
  0x043:              | Loop:
  0x043: f0f20a000000 |   isubl $10, %edx		# len<2? (len=len-2)
  0x049: 7259010000   |   jl Rest10
  0x04e:              | Loop1:
  0x04e: 506300000000 |   mrmovl (%ebx), %esi   # read val from src...
  0x054: 406100000000 |   rmmovl %esi, (%ecx)   # ...and store it to dst
  0x05a: 6266         |   andl %esi, %esi       # val <= 0?
  0x05c: 7167000000   |   jle Loop2			# if so, goto Npos:
  0x061: c0f001000000 |   iaddl $1,%eax
  0x067:              | Loop2:
  0x067: 506304000000 |   mrmovl 4(%ebx), %esi
  0x06d: 406104000000 |   rmmovl %esi, 4(%ecx)
  0x073: 6266         |   andl %esi, %esi		# val<=0?
  0x075: 7180000000   |   jle Loop3
  0x07a: c0f001000000 |   iaddl $1,%eax
  0x080:              | Loop3:
  0x080: 506308000000 |   mrmovl 8(%ebx), %esi
  0x086: 406108000000 |   rmmovl %esi, 8(%ecx)
  0x08c: 6266         |   andl %esi, %esi
  0x08e: 7199000000   |   jle Loop4
  0x093: c0f001000000 |   iaddl $1, %eax
  0x099:              | Loop4:
  0x099: 50630c000000 |   mrmovl 12(%ebx), %esi
  0x09f: 40610c000000 |   rmmovl %esi, 12(%ecx)
  0x0a5: 6266         |   andl %esi, %esi
  0x0a7: 71b2000000   |   jle Loop5
  0x0ac: c0f001000000 |   iaddl $1, %eax
  0x0b2:              | Loop5:
  0x0b2: 506310000000 |   mrmovl 16(%ebx), %esi
  0x0b8: 406110000000 |   rmmovl %esi, 16(%ecx)
  0x0be: 6266         |   andl %esi, %esi
  0x0c0: 71cb000000   |   jle Loop6
  0x0c5: c0f001000000 |   iaddl $1, %eax
  0x0cb:              | Loop6:
  0x0cb: 506314000000 |   mrmovl 20(%ebx), %esi
  0x0d1: 406114000000 |   rmmovl %esi, 20(%ecx)
  0x0d7: 6266         |   andl %esi, %esi
  0x0d9: 71e4000000   |   jle Loop7
  0x0de: c0f001000000 |   iaddl $1, %eax
  0x0e4:              | Loop7:
  0x0e4: 506318000000 |   mrmovl 24(%ebx), %esi
  0x0ea: 406118000000 |   rmmovl %esi, 24(%ecx)
  0x0f0: 6266         |   andl %esi, %esi
  0x0f2: 71fd000000   |   jle Loop8
  0x0f7: c0f001000000 |   iaddl $1, %eax
  0x0fd:              | Loop8:
  0x0fd: 50631c000000 |   mrmovl 28(%ebx), %esi
  0x103: 40611c000000 |   rmmovl %esi, 28(%ecx)
  0x109: 6266         |   andl %esi, %esi
  0x10b: 7116010000   |   jle Loop9
  0x110: c0f001000000 |   iaddl $1, %eax
  0x116:              | Loop9:
  0x116: 506320000000 |   mrmovl 32(%ebx), %esi
  0x11c: 406120000000 |   rmmovl %esi, 32(%ecx)
  0x122: 6266         |   andl %esi, %esi
  0x124: 712f010000   |   jle Loop10
  0x129: c0f001000000 |   iaddl $1, %eax
  0x12f:              | Loop10:
  0x12f: 506324000000 |   mrmovl 36(%ebx), %esi
  0x135: 406124000000 |   rmmovl %esi, 36(%ecx)
  0x13b: 6266         |   andl %esi, %esi
  0x13d: 7148010000   |   jle Loopfin
  0x142: c0f001000000 |   iaddl $1, %eax
  0x148:              | Loopfin:
  0x148: c0f328000000 |   iaddl $40, %ebx
  0x14e: c0f128000000 |   iaddl $40, %ecx
  0x154: 7043000000   |   jmp Loop
                      | 
  0x159:              | Rest10:
  0x159: c0f205000000 |   iaddl $5, %edx		#len=len+2
  0x15f: 72f3010000   |   jl Rest51				#if len==0 -> Done
  0x164:              | R11:
  0x164: 506300000000 |   mrmovl (%ebx),%esi
  0x16a: 406100000000 |   rmmovl %esi,(%ecx)
  0x170: 6266         |   andl %esi,%esi
  0x172: 717d010000   |   jle R12
  0x177: c0f001000000 |   iaddl $1,%eax
  0x17d:              | R12:
  0x17d: 506304000000 |   mrmovl 4(%ebx),%esi
  0x183: 406104000000 |   rmmovl %esi,4(%ecx)
  0x189: 6266         |   andl %esi,%esi
  0x18b: 7196010000   |   jle R13
  0x190: c0f001000000 |   iaddl $1,%eax
  0x196:              | R13:
  0x196: 506308000000 |   mrmovl 8(%ebx),%esi
  0x19c: 406108000000 |   rmmovl %esi,8(%ecx)
  0x1a2: 6266         |   andl %esi,%esi
  0x1a4: 71af010000   |   jle R14
  0x1a9: c0f001000000 |   iaddl $1,%eax
  0x1af:              | R14:
  0x1af: 50630c000000 |   mrmovl 12(%ebx),%esi
  0x1b5: 40610c000000 |   rmmovl %esi,12(%ecx)
  0x1bb: 6266         |   andl %esi,%esi
  0x1bd: 71c8010000   |   jle R15
  0x1c2: c0f001000000 |   iaddl $1,%eax
  0x1c8:              | R15:
  0x1c8: 506310000000 |   mrmovl 16(%ebx),%esi
  0x1ce: 406110000000 |   rmmovl %esi,16(%ecx)
  0x1d4: 6266         |   andl %esi,%esi
  0x1d6: 71e1010000   |   jle Rest10F
  0x1db: c0f001000000 |   iaddl $1,%eax
  0x1e1:              | Rest10F:
  0x1e1: c0f314000000 |   iaddl $20,%ebx
  0x1e7: c0f114000000 |   iaddl $20,%ecx
  0x1ed: f0f205000000 |   isubl $5,%edx
  0x1f3:              | Rest51:
  0x1f3: c0f204000000 |   iaddl $4, %edx
  0x1f9: 7283020000   |   jl Done
  0x1fe: 506300000000 |   mrmovl (%ebx),%esi
  0x204: 406100000000 |   rmmovl %esi,(%ecx)
  0x20a: 6266         |   andl %esi,%esi
  0x20c: 7117020000   |   jle Rest52
  0x211: c0f001000000 |   iaddl $1,%eax
  0x217:              | Rest52:
  0x217: f0f201000000 |   isubl $1, %edx
  0x21d: 7283020000   |   jl Done
  0x222: 506304000000 |   mrmovl 4(%ebx),%esi
  0x228: 406104000000 |   rmmovl %esi,4(%ecx)
  0x22e: 6266         |   andl %esi,%esi
  0x230: 713b020000   |   jle Rest53
  0x235: c0f001000000 |   iaddl $1,%eax
  0x23b:              | Rest53:
  0x23b: f0f201000000 |   isubl $1, %edx
  0x241: 7283020000   |   jl Done
  0x246: 506308000000 |   mrmovl 8(%ebx),%esi
  0x24c: 406108000000 |   rmmovl %esi,8(%ecx)
  0x252: 6266         |   andl %esi,%esi
  0x254: 715f020000   |   jle Rest54
  0x259: c0f001000000 |   iaddl $1,%eax
  0x25f:              | Rest54:
  0x25f: f0f201000000 |   isubl $1, %edx
  0x265: 7283020000   |   jl Done
  0x26a: 50630c000000 |   mrmovl 12(%ebx),%esi
  0x270: 40610c000000 |   rmmovl %esi,12(%ecx)
  0x276: 6266         |   andl %esi,%esi
  0x278: 7183020000   |   jle Done
  0x27d: c0f001000000 |   iaddl $1,%eax
                      | ##################################################################
                      | # Do not modify the following section of code (Function epiloge)
  0x283:              | Done:
  0x283: b07f         |   popl %edi               # Restore callee-save registers
  0x285: b03f         |   popl %ebx
  0x287: b06f         |   popl %esi
  0x289: 2054         |   rrmovl %ebp, %esp
  0x28b: b05f         |   popl %ebp
  0x28d: 90           |   ret
                      | ##################################################################
                      | # Keep the following label at the end of your function
  0x28e:              | End:
                      | #/* $end ncopy-ys */
